// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VirtualRoulette.Data.Models.DBContext;

namespace VirtualRoulette.Data.Models.Migrations
{
    [DbContext(typeof(RouletteDBContext))]
    [Migration("20220511213300_AddJackPot")]
    partial class AddJackPot
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.16");

            modelBuilder.Entity("VirtualRoulette.Domain.Domains.AppUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("Balance")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("VirtualRoulette.Domain.Domains.JackPot", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("JackPotAmount")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("JackPots");
                });

            modelBuilder.Entity("VirtualRoulette.Domain.Domains.SessionToken", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AppUserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastRequest")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("AppUserID");

                    b.ToTable("SessionTokens");
                });

            modelBuilder.Entity("VirtualRoulette.Domain.Domains.Spin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("AmountForJackpot")
                        .HasColumnType("bigint");

                    b.Property<int?>("AppUserID")
                        .HasColumnType("int");

                    b.Property<long>("BetAmount")
                        .HasColumnType("bigint");

                    b.Property<string>("IpAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("SessionTokenID")
                        .HasColumnType("int");

                    b.Property<DateTime>("SpinDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WinningNumber")
                        .HasColumnType("int");

                    b.Property<long>("WonAmount")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("AppUserID");

                    b.HasIndex("SessionTokenID");

                    b.ToTable("Spins");
                });

            modelBuilder.Entity("VirtualRoulette.Domain.Domains.SessionToken", b =>
                {
                    b.HasOne("VirtualRoulette.Domain.Domains.AppUser", "AppUser")
                        .WithMany("Tokens")
                        .HasForeignKey("AppUserID");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("VirtualRoulette.Domain.Domains.Spin", b =>
                {
                    b.HasOne("VirtualRoulette.Domain.Domains.AppUser", "AppUser")
                        .WithMany("spins")
                        .HasForeignKey("AppUserID");

                    b.HasOne("VirtualRoulette.Domain.Domains.SessionToken", "SessionToken")
                        .WithMany("Spins")
                        .HasForeignKey("SessionTokenID");

                    b.Navigation("AppUser");

                    b.Navigation("SessionToken");
                });

            modelBuilder.Entity("VirtualRoulette.Domain.Domains.AppUser", b =>
                {
                    b.Navigation("spins");

                    b.Navigation("Tokens");
                });

            modelBuilder.Entity("VirtualRoulette.Domain.Domains.SessionToken", b =>
                {
                    b.Navigation("Spins");
                });
#pragma warning restore 612, 618
        }
    }
}
